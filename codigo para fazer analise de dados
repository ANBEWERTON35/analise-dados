import pandas as pd
import pdfplumber
import os

def extrair_dados_pdf(caminho_arquivo):
    """Extrai os dados do arquivo PDF e retorna uma lista de dicionários"""
    dados = []
    cabecalho_encontrado = False
    
    with pdfplumber.open(caminho_arquivo) as pdf:
        for page in pdf.pages:
            text = page.extract_text()
            lines = text.split('\n')
            
            for line in lines:
                if '=====' in line or not line.strip():
                    continue
                
                if 'BROADBAND AVAILABILITY PER FCC' in line:
                    cabecalho_encontrado = True
                    continue
                
                parts = line.split(',')
                if len(parts) >= 5:
                    try:
                        estado = parts[0].strip()
                        county_id = parts[1].strip()
                        county_name = parts[2].strip()
                        
                        broadband_availability = parts[3].strip() if len(parts) > 3 else None
                        broadband_usage = parts[4].strip() if len(parts) > 4 else None

                        availability = float(broadband_availability) if broadband_availability not in ['', '-'] else None
                        usage = float(broadband_usage) if broadband_usage not in ['', '-'] else None

                        dados.append({
                            'estado': estado,
                            'county_id': county_id,
                            'county_name': county_name,
                            'broadband_availability': availability,
                            'broadband_usage': usage,
                            'ano': os.path.basename(caminho_arquivo)[11:15]
                        })
                    except ValueError as e:
                        continue
    
    return dados

def gerar_relatorio_academico(dados, nome_arquivo):
    """Gera um relatório no formato acadêmico"""
    if not dados:
        print(f"Nenhum dado para relatório do arquivo {nome_arquivo}.")
        return

    df = pd.DataFrame(dados)
    total_registros = len(df)
    
    print("\nANÁLISE DO DOCUMENTO ACADÊMICO")
    print("="*50 + "\n")
    print(f"Número total de registros: {total_registros}\n")
    
    print("Variáveis Quantitativas Identificadas:")
    print("1. Disponibilidade de banda larga (FCC)")
    print("2. Uso de banda larga\n")
    
    print("Variáveis Qualitativas Identificadas:")
    print("1. Estado (sigla)")
    print("2. ID do condado")
    print("3. Nome do condado")
    print("4. Ano da pesquisa\n")
    
    # Criando a tabela resumo
    resumo = pd.DataFrame({
        'Variável': [
            'Disponibilidade de banda larga (FCC)',
            'Uso de banda larga',
            'Estado (sigla)',
            'ID do condado',
            'Nome do condado',
            'Ano da pesquisa'
        ],
        'Tipo': [
            'Quantitativa',
            'Quantitativa',
            'Qualitativa',
            'Qualitativa',
            'Qualitativa',
            'Qualitativa'
        ],
        'Exemplo': [
            f"{df['broadband_availability'].mean():.2f} (média)",
            f"{df['broadband_usage'].mean():.2f} (média)",
            df['estado'].iloc[0],
            df['county_id'].iloc[0],
            df['county_name'].iloc[0],
            df['ano'].iloc[0]
        ]
    })
    
    print("\nTabela Resumo de Variáveis:")
    print(resumo.to_string(index=False))
    
    print("\n\nAlguns dados quantitativos encontrados:")
    print(f"- Disponibilidade média de banda larga: {df['broadband_availability'].mean():.2f}")
    print(f"- Uso médio de banda larga: {df['broadband_usage'].mean():.2f}")
    print(f"- Máxima disponibilidade registrada: {df['broadband_availability'].max():.2f}")
    print(f"- Mínimo uso registrado: {df['broadband_usage'].min():.2f}\n")
    
    print("="*50)

# Caminhos para os arquivos PDF
caminhos_pdf = [
    r'D:\DADOS DO SSD02\CURSO DE TELEMATICA\ESTATISTICA APLICADA\CONJUNTO DE DADOS DO TRABALHO\broadband_data_2019November.pdf',
    r'D:\DADOS DO SSD02\CURSO DE TELEMATICA\ESTATISTICA APLICADA\CONJUNTO DE DADOS DO TRABALHO\broadband_data_2020October.pdf'
]

for caminho_pdf in caminhos_pdf:
    try:
        print(f"\nProcessando arquivo: {os.path.basename(caminho_pdf)}")
        dados = extrair_dados_pdf(caminho_pdf)
        if dados:
            nome_arquivo = os.path.basename(caminho_pdf)
            gerar_relatorio_academico(dados, nome_arquivo)
            
            # Salvar em CSV para análise posterior
            df = pd.DataFrame(dados)
            nome_csv = f"broadband_data_{nome_arquivo[11:15]}_processed.csv"
            df.to_csv(nome_csv, index=False)
            print(f"\nDados salvos em '{nome_csv}'")
        else:
            print(f"Não foi possível extrair dados do arquivo {nome_arquivo}")
    except FileNotFoundError:
        print(f"Arquivo PDF não encontrado no caminho: {caminho_pdf}")
    except Exception as e:
        print(f"Erro ao processar o arquivo PDF {caminho_pdf}: {e}")
